{"version":3,"sources":["static/images/houseIcon.jpg","states/action-types.js","components/Header.js","states/actions.js","components/Home.js","components/Another.js","components/Form.js","components/RemoveForm.js","components/Login.js","components/Register.js","components/LoginRoute.js","components/AnonymousRoute.js","App.js","serviceWorker.js","states/reducers.js","states/middleware.js","states/store.js","index.js"],"names":["module","exports","ADD_ARTICLE","REMOVE_ARTICLE","BAD_WORD_FOUND","LOGIN_USER","LOGOUT_USER","HeaderIcon","img","src","homeIcon","className","HeaderTitle","HeaderSearchBar","HeaderNavbar","props","icon","faBars","role","classNames","burgerMenuVisible","onClick","changeBurgerMenuVisibility","class","Header","setState","state","handleLogout","event","preventDefault","logoutUser","this","Component","connect","isLogged","dispatch","type","payload","articles","map","el","key","id","title","Another","ConnectedForm","handleChange","target","value","handleSubmit","addArticle","onSubmit","htmlFor","onChange","Form","article","RemoveFormComponent","removeArticle","RemoveForm","Login","clearState","login","password","loginUser","Register","LoginRoute","useSelector","path","component","options","App","exact","Home","Boolean","window","location","hostname","match","initialState","rootReducer","action","Object","assign","concat","filter","forbiddenWords","createStore","applyMiddleware","next","word","includes","length","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9749a7dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/houseIcon.5ce58a95.jpg\";","export const ADD_ARTICLE = \"ADD_ARTICLE\";\nexport const REMOVE_ARTICLE = \"REMOVE_ARTICLE\";\nexport const BAD_WORD_FOUND = \"BAD_WORD_FOUND\";\n\nexport const LOGIN_USER = \"LOGIN_USER\";\nexport const LOGOUT_USER = \"LOGOUT_USER\";\n","import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport { faBars, faAddressCard } from '@fortawesome/free-solid-svg-icons'\nimport { logoutUser } from '../states/actions';\nimport './Header.scss';\nimport homeIcon from '../static/images/houseIcon.jpg';\n\nconst mapStateToProps = state => {\n    return {\n        isLogged: state.isLogged\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logoutUser: () => dispatch(logoutUser())\n    }\n}\n\nconst HeaderIcon = img => {\n    return (\n        <img src={homeIcon} className=\"Icon\"/>\n    );\n}\n\nconst HeaderTitle = () => {\n    return (\n        <h1 className=\"Title\">Quokka</h1>\n    );\n}\n\nconst HeaderSearchBar = () => {\n    return (\n        <span>Search bar</span>\n    );\n}\n\nconst HeaderNavbar = props => {\n    let icon = faBars;\n\n    return (\n        <nav role=\"navigation\" className={classNames({\n            'burgerVisible': props.burgerMenuVisible,\n            'burgerHidden': !props.burgerMenuVisible\n        })}>\n            <FontAwesomeIcon icon={icon} className=\"burgerMenuIcon\" onClick={() => props.changeBurgerMenuVisibility()} />\n            <div class=\"burgerMenu\"></div>\n            <ul role=\"mainNav\">\n                <li><strong>HOME</strong></li>\n                <li><strong>SERVICES</strong></li>\n                <li><strong>ABOUT</strong></li>\n                <li><strong>PROFILE</strong></li>\n                <li><strong>LOGOUT</strong></li>\n            </ul>\n        </nav>\n    );\n}\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            burgerMenuVisible: null\n        }\n    }\n\n    changeBurgerMenuVisibility = () => {\n        this.setState({\n            burgerMenuVisible: this.state.burgerMenuVisible ? false : true\n        })\n    }\n\n    handleLogout = event => {\n        event.preventDefault();\n        this.props.logoutUser();\n    }\n\n    render() {\n        return (\n            <div class=\"Header\">\n                <HeaderIcon />\n                <HeaderTitle />\n                <HeaderSearchBar />\n                <HeaderNavbar burgerMenuVisible={this.state.burgerMenuVisible} changeBurgerMenuVisibility={this.changeBurgerMenuVisibility} />\n            </div>\n            // <nav>\n            //     <ul>\n            //     <li>\n            //         <Link to=\"/\">Home</Link>\n            //     </li>\n            //     <li>\n            //         <Link to=\"/another\">Aboequt</Link>\n            //     </li>\n            //     <li>\n            //         <Link to=\"/addArticle\">Add article</Link>\n            //     </li>\n            //     <li>\n            //         <Link to=\"/removeArticle\">Remove article</Link>\n            //     </li>\n            //     {this.props.isLogged ? (\n            //         <Fragment>\n            //             <li>\n            //                 <Link to=\"/profile\">Profile</Link>\n            //             </li>\n            //             <li>\n            //                 <button onClick={this.handleLogout}>Logout</button>\n            //             </li>\n            //         </Fragment>\n            //     ) : (\n            //         <Fragment>\n            //             <li>\n            //                 <Link to=\"/login\">Login</Link>\n            //             </li>\n            //             <li>\n            //                 <Link to=\"/register\">Register</Link>\n            //             </li>\n            //         </Fragment>\n            //     )}\n            //     </ul>\n            // </nav>\n        )\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);\n","import { ADD_ARTICLE, REMOVE_ARTICLE, LOGIN_USER, LOGOUT_USER } from './action-types';\n\nexport function addArticle(payload) {\n    return { type: ADD_ARTICLE, payload };\n};\n\nexport function removeArticle(payload) {\n    return { type: REMOVE_ARTICLE, payload};\n};\n\nexport function loginUser(payload) {\n    return {type: LOGIN_USER, payload};\n};\n\nexport function logoutUser(payload) {\n    return {type: LOGOUT_USER, payload};\n};","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n    return { articles: state.articles };\n};\n\nconst ArticlesList = ({ articles }) => (\n    <ul>\n        {articles.map(el => (\n            <li key={el.id}>{el.title}</li>\n        ))}\n    </ul>\n);\n\nexport default connect(mapStateToProps)(ArticlesList);","import React from 'react';\n\nconst Another = () => (\n    <div>\n        adnother\n    </div>\n);\n\nexport default Another;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addArticle } from '../states/actions';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addArticle: article => dispatch(addArticle(article))\n    };\n}\n\nclass ConnectedForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: ''\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const { title } = this.state;\n        this.props.addArticle({ title });\n        this.setState({ title: '' });\n    }\n\n    render() {\n        const { title } = this.state;\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div>\n                    <label htmlFor=\"title\">Title</label>\n                    <input\n                        type=\"text\"\n                        id=\"title\"\n                        value={title}\n                        onChange={this.handleChange}\n                    />\n                </div>\n                <button type=\"submit\">Save</button>\n            </form>\n        );\n    }\n}\n\nconst Form = connect(\n    null,\n    mapDispatchToProps\n)(ConnectedForm);\n\nexport default Form;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { removeArticle } from '../states/actions';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        removeArticle: article => dispatch(removeArticle(article))\n    };\n}\n\nclass RemoveFormComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: ''\n        }\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const { title } = this.state;\n        this.props.removeArticle({ title });\n        this.setState({ title: '' })\n    }\n\n    render() {\n        const { title } = this.state;\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div>\n                    <label htmlFor=\"title\">Title</label>\n                    <input\n                        type=\"text\"\n                        id=\"title\"\n                        value={title}\n                        onChange={this.handleChange}\n                    />\n                </div>\n                <button type=\"submit\">Save</button>\n            </form>\n        )\n    }\n}\n\nconst RemoveForm = connect(\n    null,\n    mapDispatchToProps\n)(RemoveFormComponent);\n\nexport default RemoveForm;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../states/actions';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loginUser: (login, password) => dispatch(loginUser({login, password}))\n    };\n}\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            login: '',\n            password: ''\n        };\n    }\n\n    clearState = () => {\n        this.setState({\n            login: '',\n            password: ''\n        });\n    }\n\n    handleChange = event => {\n        this.setState({ [event.target.id]: event.target.value })\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const { login, password } = this.state;\n        this.props.loginUser(login, password);\n        this.clearState();\n    }\n\n    render() {\n        const { login, password } = this.state;\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div>\n                    <label htmlFor=\"login\">Login</label>\n                    <input\n                        type=\"text\"\n                        id=\"login\"\n                        value={login}\n                        onChange={this.handleChange}\n                    />\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={this.handleChange}\n                    />\n                </div>\n                <button type=\"submit\">Save</button>\n            </form>\n        );\n    }\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(Login);","import React, { Component } from 'react';\n\nclass Register extends Component {\n\n    render() {\n        return (\n            <p>register</p>\n        );\n    }\n}\n\nexport default Register;","import React, { Fragment } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route } from 'react-router-dom';\n\nexport default function LoginRoute(props) {\n    const isLogged = useSelector(state => state.isLogged);\n    const { path, component, ...options } = props;\n    return (\n        <Fragment>\n            {isLogged && (\n                <Route {...options} path={path} component={component}/>\n            )}\n        </Fragment>\n    );\n}","import React, { Fragment } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route } from 'react-router-dom';\n\nexport default function LoginRoute(props) {\n    const isLogged = useSelector(state => state.isLogged);\n    const { path, component, ...options } = props;\n    return (\n        <Fragment>\n            {!isLogged && (\n                <Route {...options} path={path} component={component}/>\n            )}\n        </Fragment>\n    );\n}","import React, { Component, Fragment } from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport './App.scss';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Another from './components/Another';\nimport Form from './components/Form';\nimport RemoveForm from './components/RemoveForm';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport LoginRoute from './components/LoginRoute';\nimport AnonymousRoute from './components/AnonymousRoute';\n\nclass App extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Header />\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/another\" component={Another} />\n            <Route path=\"/addArticle\" component={Form} />\n            <Route path=\"/removeArticle\" component={RemoveForm} />\n            <AnonymousRoute path=\"/login\" component={Login} />\n            <AnonymousRoute path=\"/register\" component={Register} />\n            <LoginRoute path=\"/profile\" component={RemoveForm} />\n          </Switch>\n        </BrowserRouter>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_ARTICLE, REMOVE_ARTICLE, LOGIN_USER, LOGOUT_USER } from './action-types';\n\nconst initialState = {\n    articles: [],\n    isLogged: false\n};\n\nconst rootReducer = (state = initialState, action) => {\n    if (action.type == ADD_ARTICLE) {\n        return Object.assign({}, state, {\n            articles: state.articles.concat(action.payload)\n        });\n    } else if (action.type == REMOVE_ARTICLE) {\n        return Object.assign({}, state, {\n            articles: state.articles.filter(article => article.title !== action.payload.title)\n        })\n    }\n\n    switch (action.type) {\n        case LOGIN_USER:\n            return Object.assign({}, state, {\n                login: action.payload.login,\n                password: action.payload.password,\n                isLogged: true\n            });\n        case LOGOUT_USER:\n            return Object.assign({}, state, {\n                login: '',\n                password: '',\n                isLogged: false\n            })\n    }\n    return state;\n}\n\nexport default rootReducer;","import { ADD_ARTICLE, BAD_WORD_FOUND } from '../states/action-types';\n\nconst forbiddenWords = ['spam', 'money'];\n\nexport function forbiddenWordsMiddleware({ dispatch }) {\n    return function(next) {\n        return function(action) {\n            if (action.type == ADD_ARTICLE) {\n                const foundWord = forbiddenWords.filter(word => action.payload.title.includes(word));\n                if (foundWord.length) {\n                    return dispatch({ type: BAD_WORD_FOUND });\n                }\n            }\n            return next(action);\n        };\n    }\n}","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from \"./reducers\";\nimport { forbiddenWordsMiddleware } from './middleware';\n\nexport default createStore(\n    rootReducer,\n    applyMiddleware(forbiddenWordsMiddleware)\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './states/store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
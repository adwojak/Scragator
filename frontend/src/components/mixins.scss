@import "./constants.scss";

@mixin set_transform_origin() {
  -o-transform-origin: 50% 55.2%;
  -ms-transform-origin: 50% 55.2%;
  -webkit-transform-origin: 50% 55.2%;
  -moz-transform-origin: 50% 55.2%;
  transform-origin: 50% 55.2%;
}

@mixin transform($transX, $transY, $deg) {
  -ms-transform: translate($transX, $transY) rotate($deg);
  -webkit-transform: translate($transX, $transY) rotate($deg);
  transform: translate($transX, $transY) rotate($deg);
}

@mixin fill_color($color) {
  border-bottom: 0.691em solid $color;
  border-left: 0.951em solid transparent;
  border-right: 0.951em solid transparent;
}

@mixin star($radius, $color, $top, $right) {
  // https://github.com/adcentury/css-star
  position: absolute;
  top: $top;
  right: $right;
  font-size: $radius;
  @include set_transform_origin();
  @include transform(-50%, -55.2%, 36deg);
  @include fill_color($color);
  &:before,
  &:after {
    content: "";
    position: absolute;
    display: block;
    @include set_transform_origin();
    @include fill_color($color);
  }
  &:before {
    @include transform(-50%, 0, -72deg);
  }
  &:after {
    @include transform(-50%, 0, 72deg);
  }
}

@mixin burger-button($size: 100px, $color: white, $animation-duration: 0.5s) {
  #BurgerButton {
    display: flex;
    flex-direction: column;
    justify-content: space-around;

    width: $size;
    height: $size;
    margin-left: 10px;
    margin-right: 10px;
    z-index: 11;
    cursor: pointer;

    &.burgerButtonActive {
      transition: transform $animation-duration;
      .BurgerBarShortGroup > .BurgerBarShort {
        &:nth-of-type(1) {
          transform: translateX(calc(#{$size} * 0.05))
            translateY(calc(#{$size} * 0.2)) rotate(-45deg);
        }
        &:nth-of-type(2) {
          transform: translateX(calc(#{$size} * -0.05))
            translateY(calc(#{$size} * -0.2)) rotate(-45deg);
        }
      }

      .BurgerBarLong {
        &:nth-of-type(1) {
          transform: translateY(calc(#{$size} * 0.33)) rotate(45deg);
        }
        &:nth-of-type(3) {
          transform: translateY(calc(#{$size} * -0.33)) rotate(45deg);
        }
      }
    }

    .BurgerBarLong {
      width: inherit;
      height: calc(#{$size} / 10);
      background-color: $color;
      transition: transform $animation-duration;
    }

    .BurgerBarShortGroup {
      display: flex;

      .BurgerBarShort {
        width: calc(#{$size} / 2);
        height: calc(#{$size} / 10);
        background-color: $color;
        transition: transform $animation-duration;
      }
    }
  }
}
